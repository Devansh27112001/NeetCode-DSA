/* Find the Difference

You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

Constraints:
  0 <= s.length <= 1000
  t.length == s.length + 1
  s and t consist of lowercase English letters.
*/

const solution_optimal = (s: string, t: string): string => {
  let sMap: { [key: string]: number } = {};
  let tMap: { [key: string]: number } = {};

  for (const char of s) {
    sMap[char] = (sMap[char] || 0) + 1;
  }

  for (const char of t) {
    tMap[char] = (tMap[char] || 0) + 1;
  }

  for (const key of Object.keys(tMap)) {
    if (sMap[key] && tMap[key] === sMap[key]) {
      continue;
    } else {
      return key;
    }
  }
  return "";
};

console.log(solution_optimal("", "y"));
